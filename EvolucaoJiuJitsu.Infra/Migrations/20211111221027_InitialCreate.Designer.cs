// <auto-generated />
using System;
using EvolucaoJiuJitsu.Infra.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace EvolucaoJiuJitsu.Infra.Migrations
{
    [DbContext(typeof(AlunoContext))]
    [Migration("20211111221027_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("EvolucaoJiuJitsu.Dominio.Aluno", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("DtaNascimento")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<long>("IdProgresso")
                        .HasColumnType("bigint");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("character varying(80)");

                    b.HasKey("Id");

                    b.HasIndex("IdProgresso");

                    b.ToTable("Alunos");
                });

            modelBuilder.Entity("EvolucaoJiuJitsu.Dominio.Progresso", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("FaixaAtual")
                        .HasColumnType("integer");

                    b.Property<int>("GrauFaixaAtual")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Inicio")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("QtdAulasFrequentadas")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Progressos");
                });

            modelBuilder.Entity("EvolucaoJiuJitsu.Dominio.Tecnica", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<long?>("AlunoId")
                        .HasColumnType("bigint");

                    b.Property<string>("Descricao")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<string>("Nome")
                        .HasMaxLength(80)
                        .HasColumnType("character varying(80)");

                    b.HasKey("Id");

                    b.HasIndex("AlunoId");

                    b.ToTable("Tecnicas");
                });

            modelBuilder.Entity("EvolucaoJiuJitsu.Dominio.Aluno", b =>
                {
                    b.HasOne("EvolucaoJiuJitsu.Dominio.Progresso", "Progresso")
                        .WithMany()
                        .HasForeignKey("IdProgresso")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Progresso");
                });

            modelBuilder.Entity("EvolucaoJiuJitsu.Dominio.Tecnica", b =>
                {
                    b.HasOne("EvolucaoJiuJitsu.Dominio.Aluno", "Aluno")
                        .WithMany("TecnicasAprendidas")
                        .HasForeignKey("AlunoId");

                    b.Navigation("Aluno");
                });

            modelBuilder.Entity("EvolucaoJiuJitsu.Dominio.Aluno", b =>
                {
                    b.Navigation("TecnicasAprendidas");
                });
#pragma warning restore 612, 618
        }
    }
}
